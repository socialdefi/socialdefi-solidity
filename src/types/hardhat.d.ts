/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IDEX",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDEX__factory>;
    getContractFactory(
      name: "IMaker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMaker__factory>;
    getContractFactory(
      name: "ISocialWallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISocialWallet__factory>;
    getContractFactory(
      name: "ITaker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITaker__factory>;
    getContractFactory(
      name: "ITakerReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITakerReceiver__factory>;
    getContractFactory(
      name: "Maker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Maker__factory>;
    getContractFactory(
      name: "SocialWallet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SocialWallet__factory>;
    getContractFactory(
      name: "Taker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Taker__factory>;
    getContractFactory(
      name: "TakerReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TakerReceiver__factory>;

    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IDEX",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDEX>;
    getContractAt(
      name: "IMaker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMaker>;
    getContractAt(
      name: "ISocialWallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISocialWallet>;
    getContractAt(
      name: "ITaker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITaker>;
    getContractAt(
      name: "ITakerReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITakerReceiver>;
    getContractAt(
      name: "Maker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Maker>;
    getContractAt(
      name: "SocialWallet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SocialWallet>;
    getContractAt(
      name: "Taker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Taker>;
    getContractAt(
      name: "TakerReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TakerReceiver>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
