/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ISocialWallet,
  ISocialWalletInterface,
} from "../../../contracts/socialfi/ISocialWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "makerId_",
        type: "uint256",
      },
    ],
    name: "closeMaker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "takerId_",
        type: "uint256",
      },
    ],
    name: "closeTaker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sku",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "skuQuantityOrId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "paymentCurrency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "priceQuantityOrId",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "skuType",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "paymentCurrencyType",
            type: "uint128",
          },
        ],
        internalType: "struct IMaker.Metadata",
        name: "maker_",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "dex_",
        type: "address",
      },
    ],
    name: "mintMaker",
    outputs: [
      {
        internalType: "uint256",
        name: "makerId_",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depsoitFrom_",
        type: "address",
      },
      {
        internalType: "address",
        name: "maker_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "makerId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestSkuQuantityOrId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requestPriceQuantityOrId_",
        type: "uint256",
      },
    ],
    name: "mintTaker",
    outputs: [
      {
        internalType: "uint256",
        name: "takerId_",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ISocialWallet__factory {
  static readonly abi = _abi;
  static createInterface(): ISocialWalletInterface {
    return new utils.Interface(_abi) as ISocialWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISocialWallet {
    return new Contract(address, _abi, signerOrProvider) as ISocialWallet;
  }
}
